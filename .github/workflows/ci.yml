name: CI
on:
  pull_request

jobs:
  check_terraform:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - id: check_terraform
        run: |
          ret=$(git diff origin/main HEAD --name-only | grep -E '^terraform' | wc -l)
          if [ $ret -ne 0 ] ; then
            exit 0
          else
            exit 1
          fi
        continue-on-error: true
      - name: configure AWS credentials
        if: ${{ steps.check_terraform.outcome == 'success' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - uses: hashicorp/setup-terraform@v1
        if: ${{ steps.check_terraform.outcome == 'success' }}
        with:
          terraform_version: 0.15.3
      - run: terraform init
        if: ${{ steps.check_terraform.outcome == 'success' }}

      - id: plan
        if: ${{ steps.check_terraform.outcome == 'success' }}
        run: terraform plan -no-color -var "redash_db_user_name=${{ secrets.REDASH_DB_USERNAME }}" -var "redash_db_user_password=${{ secrets.REDASH_DB_PASSWORD }}"
        continue-on-error: true

      - uses: actions/github-script@v4
        if: ${{ steps.check_terraform.outcome == 'success' }}
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan \`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  check_dbt:
    container: 
      image: python:3.9.5-buster
    defaults:
      run:
        working-directory: dbt
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - id: check_dbt
        run: |
          ret=$(git diff origin/main HEAD --name-only | grep -E '^dbt' | wc -l)
          if [ $ret -ne 0 ] ; then
            exit 0
          else
            exit 1
          fi
        continue-on-error: true
      - run: pip install poetry && poetry install
        if: ${{ steps.check_terraform.outcome == 'success' }}
