name: CD
on:
  pull_request:
    types:
      - labeled

jobs:
  deploy_terraform:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: terraform
    if: github.event.label.name == 'apply'
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - id: check_terraform
        run: |
          ret=$(git diff origin/main HEAD --name-only | grep -E '^terraform' | wc -l)
          if [ $ret -ne 0 ] ; then
            exit 0
          else
            exit 1
          fi
        continue-on-error: true
      - name: configure AWS credentials
        if: ${{ steps.check_terraform.outcome == 'success' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Set up Cloud SDK
        if: ${{ steps.check_terraform.outcome == 'success' }}
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      - uses: hashicorp/setup-terraform@v1
        if: ${{ steps.check_terraform.outcome == 'success' }}
        with:
          terraform_version: 0.15.3
      - run: terraform init
        if: ${{ steps.check_terraform.outcome == 'success' }}

      - id: apply
        if: ${{ steps.check_terraform.outcome == 'success' }}
        run: terraform apply

      - id: plan
        if: ${{ steps.check_terraform.outcome == 'success' }}
        run: terraform plan -no-color -detailed-exitcode

  deploy_dbt:
    runs-on: ubuntu-20.04
    container: 
      image: python:3.9.5
    defaults:
      run:
        working-directory: dbt
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - id: check_dbt
        run: |
          ret=$(git diff origin/main HEAD --name-only | grep -E '^dbt' | wc -l)
          if [ $ret -ne 0 ] ; then
            exit 0
          else
            exit 1
          fi
        continue-on-error: true
      - name: Set up Cloud SDK
        if: ${{ steps.check_dbt.outcome == 'success' }}
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      - run: pip install poetry && poetry install
        if: ${{ steps.check_dbt.outcome == 'success' }}
      - env:
          GOOGLE_CLOUD_PROJECT: "${{ secrets.GCP_PROJECT_ID }}"
        if: ${{ steps.check_dbt.outcome == 'success' }}
        run: |
          poetry run dbt run --profiles-dir ./ --vars "{bq_dataset_name: social_dataset}" -t prod && \
          poetry run dbt test --profiles-dir ./ --vars "{bq_dataset_name: social_dataset}" -t prod
